@import '~styles/utils/modules-entry';
@import './nav-constants';

.navDropdown {
  position: relative;
  display: flex;
  margin: $container-vertical-margin $container-horizontal-margin;

  :global(.dropdown-divider) {
    border-top-color: var(--gray-lighter);
  }
}

.toggle {
  position: relative;
  font-size: 0.9rem;
  border-radius: $corner-radius;
  padding: 0;

  // Ensure .toggle is a circle by setting width. Its height should already be
  // equal to $container-height.
  width: $container-height;

  &:hover {
    background-color: var(--gray-lightest);
  }

  &:focus {
    border-color: theme-color(primary);
  }
}

.buttonIcon {
  width: $icon-size;
  height: $icon-size;
  margin: 0;
  color: var(--gray-mid);
}

.dropdownMenu {
  width: 16rem;
  left: auto;
  right: 0;
  padding: 0.4rem;

  .item {
    padding: 0.375rem 0.75rem;
    border-radius: 0.25rem;

    .itemContents {
      display: flex;
      align-items: center;

      .leftIcon {
        margin-right: 0.4rem;
        width: $icon-size;
        height: $icon-size;
      }

      .rightContent {
        margin-left: auto;

        &.rightContentIcon {
          width: $icon-size * 0.75;
          height: $icon-size * 0.75;
          color: var(--gray-mid);
        }
      }
    }

    &:hover {
      color: var(--body-color);

      .itemContents {
        .rightContent {
          &.rightContentIcon {
            color: unset;
          }
        }
      }
    }

    &:focus {
      .itemContents {
        .rightContent {
          &.rightContentIcon {
            color: unset;
          }
        }
      }
    }

    &:active {
      color: $dropdown-link-active-color;
      background-color: theme-color(primary);

      .itemContents {
        .rightContent {
          &.rightContentIcon {
            color: unset;
          }
        }
      }
    }
  }

  @include media-breakpoint-up(md) {
    font-size: $font-size-sm;
  }
}
